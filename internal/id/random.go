// Package id contains generation and validation functions for random 16 byte strings
package id

import (
	"crypto/rand"
	"encoding/base64"
	"errors"
	"log/slog"
)

// New function generates a random string
func New() (string, error) {
	randomData := make([]byte, 16)
	_, err := rand.Read(randomData)
	if err != nil {
		slog.Error("Failed generating random 16 byte string", "error", err)
		return "", err
	}

	return base64.RawURLEncoding.EncodeToString(randomData), nil
}

// Validate function validates a random string to be generated by `New()`
func Validate(encodedID string) error {
	// in order to validate the ID, we decode it and verify the length
	id, err := base64.RawURLEncoding.DecodeString(encodedID)
	if err != nil {
		return errors.New("invalid format")
	}
	if len(id) != 16 {
		return errors.New("invalid length")
	}

	return nil
}
