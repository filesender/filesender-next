on: [push]

jobs:
  # linter:
  #   runs-on: codeberg-tiny
  #   container:
  #     image: golangci/golangci-lint:v2.0.1
    
  #   steps:
  #     - name: Install Node.js
  #       run: apt update && apt install -y nodejs

  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Run linter
  #       run: make lint

  # eslinter:
  #   runs-on: codeberg-tiny
  #   container:
  #     image: node:22

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Install dependencies
  #       run: npm install
      
  #     - name: Run ESLint
  #       run: npx eslint

  # tests:
  #   name: End to end tests and unit tests
  #   runs-on: codeberg-tiny
  #   container:
  #     image: mcr.microsoft.com/playwright:v1.50.1-noble

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Install dependencies
  #       run: npm i

  #     - name: Set up Golang
  #       uses: actions/setup-go@v5
  #       with:
  #         go-version: 1.24

  #     - name: Install required dependencies
  #       run: apt update && apt install -y make gcc libc-dev

  #     - name: Build and start Filesender
  #       run: |
  #         make filesender
  #         mkdir -p ./data

  #     - name: Run playwright tests
  #       run: npx playwright test

  #     - name: Stop filesender
  #       run: pkill filesender || true

  #     - name: Run unit tests
  #       run: make test

  publish:
    name: Builds and publishes Docker image
    runs-on: codeberg-tiny
    # needs: [linter, eslinter, tests]
    container:
      image: docker:dind
      options: --privileged

    steps:
      - name: Install docker
        run: apk add --no-cache nodejs

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Codeberg registry
        run: echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login codeberg.org -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t codeberg.org/hattorius/filesender:latest .

      - name: Push Docker image
        run: docker push codeberg.org/hattorius/filesender:latest
